c
@action_name
@controller_class
@pattern
@controller
c
exit
next
@controller.invoke_action("boo")
@controller
c
instance_eval
instance_eval(&proc)
@routes
proc.call(@routes)
&proc.call(self)
proc.call(self)
self.get
self
proc.call(self)
proc
&proc
self
&prc.call(self)
prc.call(self)
self.call(&prc)
self.call(prc)
proc.call
proc
&proc
c
@controller
c
@controller.req.request_method
@controller.req
@controller
c
@controller.req.request_method
@controller.req
@controller
c
controller_class
@pattern
pattern
c
:get
c
:get
define_method(http_method) {puts "hello"}
c
action_name
controller_class
method
pattern
c
pattern
c
pattern
c
pattern
c
controller_class
method
pattern
c
http_method
c
res.status
res
self.match(req)
self.routes
self
match(req)
c
@pattern
req.path
c
req.path =~ route.pattern
c
route
c
req.path =~ route.pattern
c
req.path =~ route.pattern
c
req.path =~ route.pattern
c
req.path =~ route.pattern
route.pattern
route
req.path
self.path
c
req.path
self.path
path
@path
req.request_method
c
req.request_method.downcase.to_sym
route.http_method
route.http_method == req.request_method.downcase.to_sym
c
route.http_method == req.request_method.downcase.to_sym
c
req
@http_method
route.http_method
route
@route
c
@routes
req.request_method
req.request_route
c
req.request_method
req
c
@controller_class
self
res
req
c
!(req.path =~ @pattern).nil?
@http_method != req.request_method.downcase.to_sym
c
!(req.path =~ @pattern).nil?
(req.path + "h" =~ @pattern).nil?
(req.path =~ @pattern).nil?
req.path =~ @pattern
req.path + "h" =~ @pattern
req.path =~ @pattern != 0
req.path =~ @pattern
req.path =~ @pattern == 0
c
req.path =~ @pattern
req.path
req
req.request_method.downcase.to_sym
req.request_method.to_sym
req.request_method
self
@path
path
@action_name
@controller_class
@http_method
@pattern
@routes
c
req.env
req
@pattern
@method
JSON.parse(@pattern)@method
JSON.parse(@pattern)
@pattern
req
c
@session
self
c
res
res.set_cookie('_rails_lite_app',{path: "/", value: @deserialized_cookie.to_json})
c
req.cookies
@deserialized_cookie.to_json
res['_rails_lite_app']
@deserialized_cookie
res.set_cookie
res
